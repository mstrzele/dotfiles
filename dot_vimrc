syntax on
filetype plugin indent on

set autoindent
set backup
set backupdir=~/.backup
set colorcolumn=80,120
set cursorcolumn
set cursorline
set expandtab
set mouse=a
set modeline
set number
set nowrap
set relativenumber
set ruler
set shiftwidth=2
set showmatch
set softtabstop=2
set tabstop=2
set viminfo=""

if $CRONTAB == "true"
  set nobackup
  set nowritebackup
endif

if &shell =~ "zsh"
  set shellcmdflag=-fc
endif

set rtp+=/usr/local/opt/fzf

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()

Plug 'airblade/vim-gitgutter'
Plug 'andrewstuart/vim-kubernetes'
Plug 'cespare/vim-toml'
Plug 'ddollar/golang-template.vim', { 'for': 'go' }
Plug 'easymotion/vim-easymotion'
Plug 'editorconfig/editorconfig-vim'
Plug 'elzr/vim-json', { 'for': 'json' }
Plug 'hashivim/vim-terraform', { 'for': 'hcl'}
Plug 'mustache/vim-mustache-handlebars'
Plug 'towolf/vim-helm', { 'for': 'yaml' }
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'sickill/vim-monokai'

Plug 'arcticicestudio/nord-vim'
let g:nord_uniform_diff_background = 1

Plug 'fatih/vim-go', { 'for': 'go', 'do': ':GoInstallBinaries' }
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

Plug 'itchyny/lightline.vim'
let g:lightline = {
      \ 'colorscheme': 'nord',
      \ }
set laststatus=2
set noshowmode

Plug 'scrooloose/syntastic'
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_markdown_mdl_exec = 'markdownlint'
let g:syntastic_markdown_mdl_args = ''
let g:syntastic_python_checkers = ['pylint', 'python']
let g:syntastic_ruby_checkers = ['rubocop', 'mri']

call plug#end()

:silent! colorscheme nord

autocmd BufNewFile,BufRead *.hcl setf terraform
autocmd BufNewFile,BufRead *.md setf markdown
autocmd BufNewFile,BufRead *.template setf json
autocmd BufNewFile,BufRead Jenkinsfile setf groovy
autocmd BufWritePre * let &bex = '-' . strftime("%Y%m%d%H%M%S") . '~'
autocmd FileType yaml set tabstop=2

set rtp+=/opt/homebrew/opt/fzf
